#!/usr/bin/env node
var __awaiter=this&&this.__awaiter||function(e,t,s,r){return new(s||(s=Promise))((function(c,a){function i(e){try{p(r.next(e))}catch(e){a(e)}}function o(e){try{p(r.throw(e))}catch(e){a(e)}}function p(e){var t;e.done?c(e.value):(t=e.value,t instanceof s?t:new s((function(e){e(t)}))).then(i,o)}p((r=r.apply(e,t||[])).next())}))};import{execSync}from"child_process";import fs from"fs";import{fileURLToPath}from"url";import path from"path";import chalk from"chalk";import prompts from"prompts";const __filename=fileURLToPath(import.meta.url),__dirname=path.dirname(__filename);function updatePackageJson(e){return __awaiter(this,void 0,void 0,(function*(){const t=path.join(e,"package.json"),s=JSON.parse(fs.readFileSync(t,"utf8")),r=Object.assign({postinstall:"prisma generate"},s.scripts);s.scripts=r;const c=s.dependencies,a=s.devDependencies;delete s.dependencies,delete s.devDependencies,s.prisma={seed:'ts-node --compiler-options {"module":"CommonJS"} prisma/seed.ts'},s.dependencies=c,s.devDependencies=a,fs.writeFileSync(t,JSON.stringify(s,null,2))}))}function updateGitignoreFile(e,t){return __awaiter(this,void 0,void 0,(function*(){const s=path.join(e,".gitignore");let r=fs.readFileSync(s,"utf8");t.forEach((e=>{r.includes(e)||(r+=`\n${e}`)})),fs.writeFileSync(s,r)}))}function updateOrCreateEnvFile(e,t){return __awaiter(this,void 0,void 0,(function*(){const s=path.join(e,".env");let r=fs.existsSync(s)?fs.readFileSync(s,"utf8"):"";r+=`${""!==r?"\n\n":""}${t}`,fs.writeFileSync(s,r)}))}function createDirectoryStructure(e,t){return __awaiter(this,void 0,void 0,(function*(){const s=[],r=["./src/app/_trpc","./src/app/api/trpc/[trpc]","./src/server/routers"];t.prisma&&(r.push("./prisma","./src/lib"),yield updatePackageJson(e),s.push("\n# Prisma\n.env")),t.zod&&r.push("./src/lib"),t.nextAuth&&r.push("./src/app/_context","./src/app/api/auth/[...nextauth]","./src/app/dashboard"),t.zod&&t.reactHookForm&&t.nextAuth&&r.push("./src/app/_components"),r.forEach((t=>fs.mkdirSync(path.join(e,t),{recursive:!0})));const c=[{src:"/codes/src/app/_trpc/client.ts",dest:"/src/app/_trpc/client.ts"},{src:"/codes/src/app/_trpc/Provider.tsx",dest:"/src/app/_trpc/Provider.tsx"},{src:"/codes/src/app/_trpc/serverClient.ts",dest:"/src/app/_trpc/serverClient.ts"},{src:"/codes/src/app/api/trpc/[trpc]/route.ts",dest:"/src/app/api/trpc/[trpc]/route.ts"},{src:"/codes/src/server/index.ts",dest:"/src/server/index.ts"},{src:"/codes/src/server/trpc.ts",dest:"/src/server/trpc.ts"},{src:"/codes/src/app/layout.tsx",dest:"/src/app/layout.tsx"}];t.prisma&&c.push({src:"/codes/prisma/schema.prisma",dest:"/prisma/schema.prisma"},{src:"/codes/src/lib/prisma.ts",dest:"/src/lib/prisma.ts"},{src:"/codes/prisma/seed.ts",dest:"/prisma/seed.ts"},{src:"/codes/prisma/seed.ts",dest:"/prisma/seed.ts"}),t.zod&&c.push({src:"/codes/src/lib/models.ts",dest:"/src/lib/models.ts"},{src:"/codes/src/lib/types.ts",dest:"/src/lib/types.ts"}),t.nextAuth&&(c.push({src:"/codes/src/app/api/auth/[...nextauth]/route.ts",dest:"/src/app/api/auth/[...nextauth]/route.ts"},{src:"/codes/src/app/api/auth/[...nextauth]/options.ts",dest:"/src/app/api/auth/[...nextauth]/options.ts"},{src:"/codes/src/middleware.ts",dest:"/src/middleware.ts"},{src:"/codes/src/app/dashboard/page.tsx",dest:"/src/app/dashboard/page.tsx"},{src:"/codes/src/app/_context/AuthProvider.tsx",dest:"/src/app/_context/AuthProvider.tsx"},{src:"/codes/src/app/next-auth-layout.tsx",dest:"/src/app/layout.tsx"},{src:"/codes/next-auth.d.ts",dest:"/next-auth.d.ts"},{src:"/codes/src/server/next-auth-trpc.ts",dest:"/src/server/trpc.ts"},{src:"/codes/src/server/context.ts",dest:"/src/server/context.ts"}),yield updateOrCreateEnvFile(e,"# TODO: Change the NEXTAUTH_SECRET below. This is a template key for Next-auth integration and should be replaced with a unique secret in production.\n\nNEXTAUTH_SECRET=zAU9UVEglC+a/TrovUGo2StGqfdzetHG67RL4P0y9xA="),t.prisma||s.push("\n# next-auth\n.env")),t.prisma&&t.zod&&c.push({src:"/codes/src/server/routers/user.ts",dest:"/src/server/routers/user.ts"},{src:"/codes/src/server/prisma-zod-rhf-na-index.ts",dest:"/src/server/index.ts"}),t.zod&&t.nextAuth&&c.push({src:"/codes/zod-next-auth.d.ts",dest:"/next-auth.d.ts"},{src:"/codes/src/zod-middleware.ts",dest:"/src/middleware.ts"},{src:"/codes/src/app/api/auth/[...nextauth]/zod-options.ts",dest:"/src/app/api/auth/[...nextauth]/options.ts"}),t.zod&&t.reactHookForm&&t.nextAuth&&c.push({src:"/codes/src/app/_components/UserList.tsx",dest:"/src/app/_components/UserList.tsx"},{src:"/codes/src/app/dashboard/zod-react-hook-form-page.tsx",dest:"/src/app/dashboard/page.tsx"}),t.prisma&&t.nextAuth&&c.push({src:"/codes/prisma/next-auth-schema.prisma",dest:"/prisma/schema.prisma"},{src:"/codes/src/server/context.ts",dest:"/src/server/context.ts"},{src:"/codes/src/server/next-auth-trpc.ts",dest:"/src/server/trpc.ts"},{src:"/codes/src/app/api/auth/[...nextauth]/next-auth-prisma-options.ts",dest:"/src/app/api/auth/[...nextauth]/options.ts"}),t.prisma&&t.zod&&t.nextAuth&&c.push({src:"/codes/src/app/api/auth/[...nextauth]/na-prisma-zod-options.ts",dest:"/src/app/api/auth/[...nextauth]/options.ts"}),t.prisma&&t.zod&&t.reactHookForm&&t.nextAuth&&c.push({src:"/codes/src/server/prisma-zod-rhf-na-index.ts",dest:"/src/server/index.ts"}),yield updateGitignoreFile(e,s),c.forEach((({src:t,dest:s})=>{const r=path.join(__dirname,t),c=path.join(e,s),a=fs.readFileSync(r,"utf8");fs.writeFileSync(c,a)}))}))}function getAnswer(){return __awaiter(this,void 0,void 0,(function*(){const e=[{type:"text",name:"projectName",message:"What is your project named?",initial:"my-app"},{type:"toggle",name:"prisma",message:`Would you like to use ${chalk.blue("Prisma")}?`,initial:!0,active:"Yes",inactive:"No"},{type:"toggle",name:"zod",message:`Would you like to use ${chalk.blue("Zod")}?`,initial:!0,active:"Yes",inactive:"No"},{type:"toggle",name:"react-hook-form",message:`Would you like to use ${chalk.blue("react-hook-form")}?`,initial:!0,active:"Yes",inactive:"No"},{type:"toggle",name:"next-auth",message:`Would you like to use ${chalk.blue("next-auth")}?`,initial:!0,active:"Yes",inactive:"No"}],t=()=>!1;try{const s=yield prompts(e,{onCancel:t});return 0===Object.keys(s).length?null:{projectName:String(s.projectName).trim().replace(/ /g,"-"),prisma:s.prisma,zod:s.zod,reactHookForm:s["react-hook-form"],nextAuth:s["next-auth"]}}catch(e){return null}}))}function installDependencies(e,t){return __awaiter(this,void 0,void 0,(function*(){t.forEach((e=>{})),execSync(`npm install ${t.join(" ")}`,{stdio:"inherit",cwd:e})}))}function main(){return __awaiter(this,void 0,void 0,(function*(){try{const e=yield getAnswer();if(null===e)return;execSync(`npx create-next-app@latest ${e.projectName} --ts --app --src-dir --import-alias @/*`,{stdio:"inherit"});const t=path.join(process.cwd(),e.projectName);process.chdir(e.projectName);const s=["@trpc/client","@trpc/server","@trpc/react-query","@tanstack/react-query","decimal.js","superjson"];e.prisma&&s.push("prisma","@prisma/client","bcrypt","@types/bcrypt","ts-node"),e.zod&&s.push("zod"),e.reactHookForm&&s.push("react-hook-form","@hookform/resolvers"),e.nextAuth&&s.push("next-auth"),e.prisma&&e.nextAuth&&s.push("@auth/prisma-adapter"),yield installDependencies(t,s),e.prisma&&execSync("npx prisma init",{stdio:"inherit"}),yield createDirectoryStructure(t,e)}catch(e){process.exit(1)}}))}main();