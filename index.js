#!/usr/bin/env node
import{execSync}from"child_process";import fs from"fs";import{fileURLToPath}from"url";import path from"path";import chalk from"chalk";import prompts from"prompts";const __filename=fileURLToPath(import.meta.url),__dirname=path.dirname(__filename);async function createDirectoryStructure(r){["./src/app/_trpc","./src/app/api/trpc/[trpc]","./src/server/routers"].forEach((r=>fs.mkdirSync(r,{recursive:!0})));[{src:"/codes/src/app/_trpc/client.ts",dest:"/src/app/_trpc/client.ts"},{src:"/codes/src/app/_trpc/Provider.tsx",dest:"/src/app/_trpc/Provider.tsx"},{src:"/codes/src/app/_trpc/serverClient.ts",dest:"/src/app/_trpc/serverClient.ts"},{src:"/codes/src/app/api/trpc/[trpc]/route.ts",dest:"/src/app/api/trpc/[trpc]/route.ts"},{src:"/codes/src/server/index.ts",dest:"/src/server/index.ts"},{src:"/codes/src/server/trpc.ts",dest:"/src/server/trpc.ts"},{src:"/codes/src/app/layout.tsx",dest:"/src/app/layout.tsx"}].forEach((({src:t,dest:e})=>{const s=path.join(__dirname,t),c=path.join(r,e),p=fs.readFileSync(s,"utf8");fs.writeFileSync(c,p)}))}async function getAnswer(){const r=[{type:"text",name:"projectName",message:"What is your project named?",initial:"my-app"},{type:"toggle",name:"prisma",message:`Would you like to use ${chalk.blue("Prisma")}?`,initial:!0,active:"Yes",inactive:"No"}],t=await prompts(r);return{projectName:t.projectName.trim().replace(/ /g,"-"),prisma:t.prisma}}async function main(){try{const r=await getAnswer();execSync(`npx create-next-app@latest ${r.projectName} --ts --app --src-dir --import-alias @/*`,{stdio:"inherit"});const t=path.join(process.cwd(),r.projectName);process.chdir(r.projectName),await createDirectoryStructure(t);const e=["@trpc/client","@trpc/server","@trpc/react-query","@tanstack/react-query","decimal.js","superjson"];r.prisma&&e.push("prisma","@prisma/client"),e.forEach((r=>{})),execSync(`npm install ${e.join(" ")}`,{stdio:"inherit"}),r.prisma&&execSync("npx prisma init",{stdio:"inherit"})}catch(r){process.exit(1)}}main();